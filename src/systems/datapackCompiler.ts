import { Compiler, Parser, Tokenizer, SyncIo } from 'mc-build'
import { VariableMap } from 'mc-build/dist/mcl/Compiler'
import { isFunctionTagPath } from '../util/fileUtil'
import datapackTemplate from './datapackCompiler/animated_java.mcb'
import { IMap } from 'mc-build/dist/Map'

function createCustomSyncIO(): SyncIo {
	const io = new SyncIo()

	io.write = (localPath, content) => {
		const writePath = PathModule.join(Project!.animated_java.data_pack, localPath)

		if (isFunctionTagPath(writePath)) {
			console.log(`Function tag merging not implemented yet.`)
		}

		console.log(`Writing to ${writePath}: ${content}`)
	}

	return io
}

export function compileDataPack() {
	try {
		console.log('Compiling Data Pack...')
		const compiler = new Compiler('src/', {
			libDir: null,
			generatedDirName: 'zzzzzz',
			internalScoreboardName: 'aj.i',
			eqVarScoreboardName: null,
			eqConstScoreboardName: null,
			header: '# This file was generated by Animated Java',
			ioThreadCount: null,
			setup: null,
		})
		compiler.io = createCustomSyncIO()

		const variables = {
			export_namespace: Project!.animated_java.export_namespace,
		}

		compiler.addFile(
			'src/animated_java.mcb',
			Parser.parseMcbFile(Tokenizer.tokenize(datapackTemplate, 'src/animated_java.mcb'))
		)

		compiler.compile(VariableMap.fromObject(variables))
	} catch (e: any) {
		console.error(e)
	}
}

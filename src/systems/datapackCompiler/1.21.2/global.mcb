import ./global.mcbt

dir global {
	function on_load minecraft:load {
		# Initialize Scoreboards
		scoreboard objectives add <%OBJECTIVES.I()%> dummy
		scoreboard objectives add <%OBJECTIVES.ID()%> dummy
		scoreboard objectives add <%OBJECTIVES.IS_RIG_LOADED()%> dummy
		scoreboard objectives add <%OBJECTIVES.TWEEN_DURATION()%> dummy

		scoreboard players add aj.last_id <%OBJECTIVES.ID()%> 0

		# Purposefully load gu first, as other functions depend on it.
		function *global/gu/on_load
		function #*global/on_load
		IF (debug_mode) {
			scoreboard players reset * <%OBJECTIVES.IS_RIG_LOADED()%>
			execute as @e[type=item_display,tag=<%TAGS.GLOBAL_ROOT()%>] at @s run function *global/root/on_load
		}
	}

	IF (debug_mode) {
		function on_tick minecraft:tick {
			execute as @e[type=item_display,tag=<%TAGS.GLOBAL_ROOT()%>] at @s run function *global/root/on_tick
		}
	} ELSE {
		function on_tick minecraft:tick {
			execute as @e[type=item_display,tag=<%TAGS.GLOBAL_ROOT()%>] at @s run function #*global/root/on_tick
		}
	}

	tag functions on_load {
		*<%export_namespace%>/on_load
	}

	dir root {
		tag functions on_tick {
			*<%export_namespace%>/root/on_tick
		}

		IF (debug_mode) {
			function on_tick {
				execute unless score @s <%OBJECTIVES.IS_RIG_LOADED()%> matches 1 run function *global/root/on_load
				function #*global/root/on_tick
			}

			function on_load {
				# Check if the rig is outdated by comparing the function's rig_hash of the rig to the rig_hash stored in the entity data.
				execute if function animated_java:global/util/is_rig_outdated run block outdated_warning/modify_rig {
					data remove storage <%temp_storage%> args
					function *global/gu/get_entity_uuid_string
					data modify storage <%temp_storage%> args.uuid set from storage <%gu_storage%> out
					# Get position
					execute store result storage <%temp_storage%> args.x double 1 run data get entity @s Pos[0] 1
					execute store result storage <%temp_storage%> args.y double 1 run data get entity @s Pos[1] 1
					execute store result storage <%temp_storage%> args.z double 1 run data get entity @s Pos[2] 1
					execute on passengers if entity @s[tag=<%TAGS.GLOBAL_DATA()%>] run {
						# Get export namespace
						data modify storage <%temp_storage%> args.export_namespace set from entity @s data.export_namespace
						# Overwrite the rig hash so the warning doesn't show again.
						data modify entity @s data.rig_hash set value '<%rig_hash%>'
					}
					block print { with storage <%temp_storage%> args
						$tellraw @a <%TELLRAW.RIG_OUTDATED()%>
					}
					execute on passengers run data merge entity @s {Glowing: 1b, glow_color_override: <%0xff0000%>}
					summon minecraft:text_display ~ ~ ~ { \
						Tags:[ \
							'<%TAGS.GLOBAL_ENTITY()%>', \
							'<%TAGS.OUTDATED_RIG_TEXT_DISPLAY()%>', \
							'<%TAGS.NEW()%>' \
						], \
						text:'<%TELLRAW.RIG_OUTDATED_TEXT_DISPLAY()%>', \
						alignment: 'center', \
						billboard: 'vertical', \
						shadow: true, \
						transformation:{ \
							translation:[0f,<%boundingBox[1]/16%>f,0f], \
							left_rotation:[0f,0f,0f,1f], \
							right_rotation:[0f,0f,0f,1f], \
							scale:[1f,1f,1f] \
						} \
					}

					ride @n[ \
						type=minecraft:text_display, \
						tag=<%TAGS.OUTDATED_RIG_TEXT_DISPLAY()%>, tag=<%TAGS.NEW()%>, \
						distance=..1 \
					] mount @s

					tag @n[ \
						type=minecraft:text_display, \
						tag=<%TAGS.OUTDATED_RIG_TEXT_DISPLAY()%>, tag=<%TAGS.NEW()%>, \
						distance=..1 \
					] remove <%TAGS.NEW()%>
				}
				scoreboard players set @s <%OBJECTIVES.IS_RIG_LOADED()%> 1
			}
		}
	}

	dir remove {
		# Removes every entity related to Animated Java.
		function everything {
			kill @e[tag=<%TAGS.GLOBAL_ENTITY()%>]
		}

		function entity_stack {
			execute on passengers if entity @s[type=!player] run function ^0
			kill @s
		}

		function entity_stack_by_uuid {
			#ARGS: {uuid: string}
			$execute as $(uuid) run function ./entity_stack
		}

		# Removes locators and cameras owned by the rig, even if they're not included in the currently loaded export.
		function outdated_rig {
			# Assert that the function is being executed as a root entity.
			debug assert executed_as_root_entity

			execute on passengers if entity @s[tag=<%TAGS.GLOBAL_DATA()%>] run block as_data {
				data remove storage <%temp_storage%> args
				data remove storage <%temp_storage%> uuids
				data modify storage <%temp_storage%> uuids set from entity @s data.uuids
				execute store result score #aj.length <%OBJECTIVES.I()%> run data get storage <%temp_storage%> uuids

				execute if score #aj.length <%OBJECTIVES.I()%> matches 1.. run block loop_over_uuids {
					data modify storage <%temp_storage%> args.current_uuid set from storage <%temp_storage%> uuids[-1].uuid
					data remove storage <%temp_storage%> uuids[-1]
					function ./entity_stack_by_uuid with storage <%temp_storage%> args

					scoreboard players remove #aj.length <%OBJECTIVES.I()%> 1
					execute if score #aj.length <%OBJECTIVES.I()%> matches 1.. run function ^0
				}
			}

			function ./entity_stack
		}
	}

	dir util {
		# Recurses through the passengers of the context entity and appends their UUIDs to `storage <%temp_storage%> uuids`.
		function get_entity_stack_uuids {
			data remove storage <%temp_storage%> uuids
			execute on passengers run {
				function *global/gu/get_entity_uuid_string
				data modify storage <%temp_storage%> uuids append from storage <%gu_storage%> out
				execute on passengers run function ^0
			}
		}
		# Returns 1 if the rig is outdated, else returns 0.
		function is_rig_outdated {
			execute on passengers if entity @s[tag=<%TAGS.GLOBAL_DATA()%>] run return run { with entity @s data
				# REVIEW - The replace here is a bit hacky.
				# Because this is a core function, I need to create a generic version of
				# project_storage that uses a macro to get the export namespace instead of hardcoding it.
				$execute if data storage <%project_storage.replace(export_namespace, '$(export_namespace)')%> {rig_hash:'$(rig_hash)'} run return 0
				return 1
			}
		}
	}

	# Thanks Gibbsly for this code! https://github.com/gibbsly/gu
	dir gu {
		function on_load {
			scoreboard players set 256 <%OBJECTIVES.I()%> 256
			data modify storage <%gu_storage%> hex_chars set value \
				<%JSON.stringify([...Array(0x100).keys()].map(v => {const x = v.toString(16); return x.length > 1 ? x : '0' + x}))%>
		}

		function get_entity_uuid_string {
			data modify storage <%gu_storage%> temp set value {0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,a:0,b:0,c:0,d:0,e:0,f:0}
			data modify storage <%gu_storage%> in set from entity @s UUID

			execute store result score 0= <%OBJECTIVES.I()%> store result score 1= <%OBJECTIVES.I()%> run data get storage <%gu_storage%> in[0]
			execute store result storage <%gu_storage%> temp.0 int 1 run scoreboard players operation 0= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result score 2= <%OBJECTIVES.I()%> run scoreboard players operation 1= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.1 int 1 run scoreboard players operation 1= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result score 3= <%OBJECTIVES.I()%> run scoreboard players operation 2= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.2 int 1 run scoreboard players operation 2= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.3 int 1 run scoreboard players operation 3= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>

			execute store result score 0= <%OBJECTIVES.I()%> store result score 1= <%OBJECTIVES.I()%> run data get storage <%gu_storage%> in[1]
			execute store result storage <%gu_storage%> temp.4 int 1 run scoreboard players operation 0= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result score 2= <%OBJECTIVES.I()%> run scoreboard players operation 1= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.5 int 1 run scoreboard players operation 1= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result score 3= <%OBJECTIVES.I()%> run scoreboard players operation 2= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.6 int 1 run scoreboard players operation 2= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.7 int 1 run scoreboard players operation 3= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>

			execute store result score 0= <%OBJECTIVES.I()%> store result score 1= <%OBJECTIVES.I()%> run data get storage <%gu_storage%> in[2]
			execute store result storage <%gu_storage%> temp.8 int 1 run scoreboard players operation 0= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result score 2= <%OBJECTIVES.I()%> run scoreboard players operation 1= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.9 int 1 run scoreboard players operation 1= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result score 3= <%OBJECTIVES.I()%> run scoreboard players operation 2= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.a int 1 run scoreboard players operation 2= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.b int 1 run scoreboard players operation 3= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>

			execute store result score 0= <%OBJECTIVES.I()%> store result score 1= <%OBJECTIVES.I()%> run data get storage <%gu_storage%> in[3]
			execute store result storage <%gu_storage%> temp.c int 1 run scoreboard players operation 0= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result score 2= <%OBJECTIVES.I()%> run scoreboard players operation 1= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.d int 1 run scoreboard players operation 1= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result score 3= <%OBJECTIVES.I()%> run scoreboard players operation 2= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.e int 1 run scoreboard players operation 2= <%OBJECTIVES.I()%> %= 256 <%OBJECTIVES.I()%>
			execute store result storage <%gu_storage%> temp.f int 1 run scoreboard players operation 3= <%OBJECTIVES.I()%> /= 256 <%OBJECTIVES.I()%>

			block { with storage <%gu_storage%> temp
				REPEAT (0, 15) as i {
					$data modify storage <%gu_storage%> temp.<%i.toString(16)%> set from storage <%gu_storage%> hex_chars[$(<%i.toString(16)%>)]
				}
			}

			block { with storage <%gu_storage%> temp
				$data modify storage <%gu_storage%> out set value "$(3)$(2)$(1)$(0)-$(7)$(6)-$(5)$(4)-$(b)$(a)-$(9)$(8)$(f)$(e)$(d)$(c)"
			}
		}
	}
}

dir <%export_namespace%> {
	function on_load {
		function *<%export_namespace%>/invalid_version_warning
	}

	function invalid_version_warning {
		tellraw @a <%TELLRAW.INVALID_VERSION()%>
	}
}

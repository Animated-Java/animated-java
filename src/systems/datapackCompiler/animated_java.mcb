
dir global {
	function on_load load {
		# Initialize Scoreboards
		scoreboard objectives add aj.i dummy
		scoreboard objectives add aj.id dummy
		scoreboard objectives add aj.frame dummy
		scoreboard objectives add aj.rig_is_loaded dummy

		scoreboard players set aj.true aj.i 1
		scoreboard players set aj.false aj.i 0
		scoreboard players add aj.last_id aj.id 0

		scoreboard players reset * aj.rig_is_loaded
		execute as @e[type=item_display,tag=aj.root_entity] unless score @s aj.rig_is_loaded matches 1 at @s run function #animated_java:global/root_entity/on_load
	}

	function on_tick tick {
		execute as @e[type=item_display,tag=aj.root_entity] at @s run function #animated_java:global/root_entity/on_tick
	}

	function help {
		# This just prints a link to the docs.
		tellraw @a {"text": "..."}
	}

	dir root_entity {
		function on_tick {
			execute unless score @s aj.rig_is_loaded matches 1 run function #animated_java:global/root_entity/on_load
			function #animated_java:global/root_entity/on_tick
		}
		function on_load {
			function #animated_java:global/root_entity/on_load
			scoreboard players set @s aj.rig_is_loaded 1
		}

		# TODO Maybe instead of merging tags, I should just generate it from the .ajmeta data every time a rig is exported?
		# That way I can also check if the rig's files still exist, and remove tag entries if they don't.
		# An entry will be added for each exported rig.
		functions on_tick {
			#animated_java:<%export_namespace%>/_/on_tick
		}
		# An entry will be added for each exported rig.
		functions on_load {
			#animated_java:<%export_namespace%>/_/on_load
		}
	}

	# An entry will be added for each exported rig.
	functions check_if_rig_outdated {
		#animated_java:<%export_namespace%>/_/check_if_rig_outdated
	}

	dir errors {
		function function_not_executed_as_root_entity {
			# Make this text fancier in the actual implementation.
			$tellraw @a 'The function $(function_path) must be executed as the root entity of the rig.'
		}
	}
}

dir <%export_namespace%> {
	function uninstall {
		# TODO Remove all scoreboard for this rig from the world.
	}

	function on_tick {
		# This command will be added for each animation.
		execute if entity @s[tag=aj.<%export_namespace%>.animation.<%animation_name%>.playing] run \
			function animated_java:<%export_namespace%>/animations/<%animation_name%>/on_tick
	}

	dir animations {
		dir animation_name {
			function play {
				execute unless entity @s[type=item_display,tag=aj.root_entity] run return run \
					function animated_java:global/errors/function_not_executed_as_root_entity \
					with {'function_path': 'animated_java:<%export_namespace%>/animations/<%animation_name%>/play'}
				tag @s add aj.<%export_namespace%>.animation.<%animation_name%>.playing
			}
			function stop {
				execute unless entity @s[type=item_display,tag=aj.root_entity] run return run \
					function animated_java:global/errors/function_not_executed_as_root_entity \
					with {'function_path': 'animated_java:<%export_namespace%>/animations/<%animation_name%>/stop'}
				tag @s remove aj.<%export_namespace%>.animation.<%animation_name%>.playing
			}
			function pause {
				execute unless entity @s[type=item_display,tag=aj.root_entity] run return run \
					function animated_java:global/errors/function_not_executed_as_root_entity \
					with {'function_path': 'animated_java:<%export_namespace%>/animations/<%animation_name%>/pause'}
				tag @s remove aj.<%export_namespace%>.animation.<%animation_name%>.playing
			}
			function resume {
				execute unless entity @s[type=item_display,tag=aj.root_entity] run return run \
					function animated_java:global/errors/function_not_executed_as_root_entity \
					with {'function_path': 'animated_java:<%export_namespace%>/animations/<%animation_name%>/resume'}
				tag @s add aj.<%export_namespace%>.animation.<%animation_name%>.playing
			}
			function reset {
				execute unless entity @s[type=item_display,tag=aj.root_entity] run return run \
					function animated_java:global/errors/function_not_executed_as_root_entity \
					with {'function_path': 'animated_java:<%export_namespace%>/animations/<%animation_name%>/reset'}
				tag @s remove aj.<%export_namespace%>.animation.<%animation_name%>.playing
			}
			function next_frame {
				execute unless entity @s[type=item_display,tag=aj.root_entity] run return run \
					function animated_java:global/errors/function_not_executed_as_root_entity \
					with {'function_path': 'animated_java:<%export_namespace%>/animations/<%animation_name%>/next_frame'}
			}
			function apply_frame {
				# ARGS: {frame: int}
				execute unless entity @s[type=item_display,tag=aj.root_entity] run return run \
					function animated_java:global/errors/function_not_executed_as_root_entity \
					with {'function_path': 'animated_java:<%export_namespace%>/animations/<%animation_name%>/apply_frame'}
			}
			function tween_play {
				execute unless entity @s[type=item_display,tag=aj.root_entity] run return run \
					function animated_java:global/errors/function_not_executed_as_root_entity \
					with {'function_path': 'animated_java:<%export_namespace%>/animations/<%animation_name%>/tween_play'}
				tag @s add aj.<%export_namespace%>.animation.<%animation_name%>.tween_playing
			}
			function tween_resume {
				execute unless entity @s[type=item_display,tag=aj.root_entity] run return run \
					function animated_java:global/errors/function_not_executed_as_root_entity \
					with {'function_path': 'animated_java:<%export_namespace%>/animations/<%animation_name%>/tween_resume'}
				tag @s add aj.<%export_namespace%>.animation.<%animation_name%>.tween_playing
			}
			dir _ {
				function on_tick {
				}
			}
		}
	}

	function summon {
		# Args: {variant: int, animation: int, frame: int}
		# frame is ignored unless animation is specified.

		summon minecraft:item_display ~ ~ ~ {Tags:['aj.rig_entity','aj.root_entity','aj.$<project_name>.root','aj.new'],Passengers:[]}
		execute as @e[type=item_display,tag=aj.new,limit=1,distance=..0.01] run {
			execute store result score @s aj.id run scoreboard players add aj.last_id aj.id 1
			tag @s remove aj.new
		}
	}

	dir summon {
		function <%variant_name%> {
			function animated_java:<%export_namespace%>/variants/<%variant_name%>/apply
		}
	}

	dir remove {
		# Removes all instances of this rig from the world.
		function all {
			execute as @e[type=item_display,tag=aj.project_name.root] run function #animated_java:<%export_namespace%>/remove/this
		}
		# Removes the rig this function is executed as.
		function this {
			execute unless entity @s[type=item_display,tag=aj.root_entity] run return run \
				function animated_java:global/errors/function_not_executed_as_root_entity \
				with {'function_path': 'animated_java:<%export_namespace%>/variants/<%variant_name%>/apply'}
			# TODO Remove the rig here.
			execute on passengers run kill @s
			kill @s
		}
		# Removes all instances of all rigs from the world.
		function everything {
			# Args: {confirm: boolean}
			$execute if score aj.$(confirm) aj.i matches 0 run tellraw @a 'Are you sure you want to remove all Animated Java rigs from the world? Run this command again with {confirm:true} to confirm.'
			$execute if score aj.$(confirm) aj.i matches 1 run {
				kill @e[type=item_display,tag=aj.rig_entity]
				tellraw @a 'All Animated Java rigs have been removed from the world.'
			}
		}
	}

	dir variants {
		dir <%variant_name%> {
			function apply {
				execute unless entity @s[type=item_display,tag=aj.root_entity] run return run \
					function animated_java:global/errors/function_not_executed_as_root_entity \
					with {'function_path': 'animated_java:<%export_namespace%>/variants/<%variant_name%>/apply'}
				# TODO Apply the variant to the rig here.
			}
		}
	}

	dir root_entity {
		functions on_tick {
			
		}

		functions on_load {
			
		}
	}

	dir _ {
		function check_if_rig_outdated {
			execute unless score @s aj.<%export_version%> matches <%export_version%> run function #animated_java:<%export_namespace%>/_/update_outdated_rig
		}

		function update_outdated_rig {
			# TODO Figure out how this will work.
			# It will probably involve killing the existing bones, and re-summoning them, then applying the default NBT to the root entity?
			# This probably won't work in cases where custom NBT is removed from the root between exports.
		}
	}
}
